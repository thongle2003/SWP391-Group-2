spring.application.name=swp391
# SQL Server Configuration
spring.datasource.url=jdbc:sqlserver://localhost:1433;databaseName=evtrading;encrypt=true;trustServerCertificate=true;characterEncoding=UTF-8
spring.datasource.username=sa
spring.datasource.password=12345
spring.datasource.driver-class-name=com.microsoft.sqlserver.jdbc.SQLServerDriver
spring.jpa.properties.hibernate.connection.characterEncoding=UTF-8
spring.jpa.properties.hibernate.connection.useUnicode=true
# JPA Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.SQLServerDialect
# Server Configuration
server.port=8080
# JWT Settings
# IMPORTANT: Use a long, random, and secure secret in production.
# You can generate one from sites like: https://www.lastpass.com/features/password-generator
app.jwtSecret=#DIz!4Bo!2J1P{_1H*4g5Sa#h&j,~5'I
# Thời gian hết hạn token (tính bằng milliseconds)
# 3600000 = 1 giờ
# 1800000 = 30 phút
# 900000 = 15 phút
# 86400000 = 24 giờ (1 ngày)
app.jwtExpirationMs=3600000
# Bật logging security để debug
logging.level.org.springframework.security=INFO
logging.level.org.springframework.web=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
logging.level.org.hibernate.SQL=DEBUG
# Đảm bảo CSRF thực sự bị vô hiệu hóa
spring.security.filter.dispatcher-types=request
spring.security.csrf.enabled=false
# Cấu hình Cloudinary
cloudinary.cloud-name=dgbd2fzqb
cloudinary.api-key=283482845393528
cloudinary.api-secret=iHJNDxWVUgM73_rMZ03_8Mu_khE
# Cấu hình multipart
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=30MB
# Facebook OAuth2
spring.security.oauth2.client.registration.facebook.client-id=${FACEBOOK_CLIENT_ID}
spring.security.oauth2.client.registration.facebook.client-secret=${FACEBOOK_CLIENT_SECRET}
spring.security.oauth2.client.registration.facebook.scope=email,public_profile
spring.security.oauth2.client.registration.facebook.redirect-uri={baseUrl}/login/oauth2/code/facebook
# Google OAuth2
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=openid,email,profile

spring.profiles.active=local
spring.jpa.open-in-view=false
logging.level.com.evtrading.swp391=DEBUG
spring.jpa.properties.hibernate.format_sql=true
# Show full error details in response
server.error.include-message=always
server.error.include-stacktrace=always
server.error.include-binding-errors=always
